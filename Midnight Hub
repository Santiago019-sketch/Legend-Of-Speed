-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")

-- Variables
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Platform Creation Function
local function CreateFarmPlatform()
    local platform = Instance.new("Part")
    platform.Name = "FarmPlatform"
    platform.Size = Vector3.new(10, 1, 10)
    platform.Anchored = true
    platform.CanCollide = true
    platform.Transparency = 0.5
    platform.Position = Vector3.new(0, 500, 0) -- High up in the sky
    platform.Parent = workspace
    return platform
end

-- UI Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Window Creation
local Window = OrionLib:MakeWindow({
    Name = "Midnight Hub | Legend of Speed",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "MidnightConfig",
    IntroEnabled = true,
    IntroText = "Midnight Hub"
})

-- Tabs
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local PetsTab = Window:MakeTab({
    Name = "Pets",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SettingsTab = Window:MakeTab({
    Name = "Settings",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Functions
local function CollectOrbs(orbType, area)
    local args = {
        "collectOrb",
        orbType,
        area
    }
    ReplicatedStorage.rEvents.orbEvent:FireServer(unpack(args))
end

local function AutoCollectAllOrbs()
    local orbTypes = {"Yellow Orb", "Orange Orb", "Red Orb", "Blue Orb"}
    local areas = {"City", "Snow City", "Magma City", "Desert"}
    
    for _, area in ipairs(areas) do
        for _, orbType in ipairs(orbTypes) do
            CollectOrbs(orbType, area)
        end
    end
end

local function AutoCollectGems()
    local areas = {"City", "Snow City", "Magma City", "Desert"}
    for _, area in ipairs(areas) do
        CollectOrbs("Gem", area)
    end
end

local function BuyEgg(eggType)
    local args = {
        "purchaseEgg",
        eggType
    }
    ReplicatedStorage.rEvents.eggEvent:FireServer(unpack(args))
end

-- Main Tab
local FarmingSection = MainTab:AddSection({
    Name = "Farming"
})

-- Auto Collect Orbs
FarmingSection:AddToggle({
    Name = "Auto Collect All Orbs",
    Default = false,
    Callback = function(Value)
        getgenv().AutoOrbs = Value
        while getgenv().AutoOrbs and task.wait(0.1) do
            pcall(AutoCollectAllOrbs)
        end
    end
})

-- Auto Collect Gems
FarmingSection:AddToggle({
    Name = "Auto Collect Gems",
    Default = false,
    Callback = function(Value)
        getgenv().AutoGems = Value
        while getgenv().AutoGems and task.wait(0.1) do
            pcall(AutoCollectGems)
        end
    end
})

-- Safe Hoops Farm (Sky Platform Method)
FarmingSection:AddToggle({
    Name = "Safe Hoops Farm (Sky)",
    Default = false,
    Callback = function(Value)
        getgenv().SafeHoopsSky = Value
        
        -- Platform handling
        local farmPlatform = workspace:FindFirstChild("FarmPlatform")
        if Value and not farmPlatform then
            farmPlatform = CreateFarmPlatform()
        end
        
        -- Teleport to platform
        if Value then
            HumanoidRootPart.CFrame = CFrame.new(0, 505, 0) -- Slightly above platform
        end
        
        -- Start farming
        while getgenv().SafeHoopsSky and task.wait(0.3) do
            pcall(function()
                for _, hoop in pairs(workspace.Hoops:GetChildren()) do
                    if hoop:IsA("BasePart") and getgenv().SafeHoopsSky then
                        hoop.CFrame = HumanoidRootPart.CFrame
                        task.wait(0.3)
                    end
                end
            end)
        end
        
        -- Cleanup when disabled
        if not Value and farmPlatform then
            farmPlatform:Destroy()
        end
    end
})

-- Fast Hoops
FarmingSection:AddToggle({
    Name = "Fast Hoops Farm",
    Default = false,
    Callback = function(Value)
        getgenv().FastHoops = Value
        while getgenv().FastHoops and task.wait(0.1) do
            pcall(function()
                for _, hoop in pairs(workspace.Hoops:GetChildren()) do
                    if hoop:IsA("BasePart") then
                        hoop.CFrame = HumanoidRootPart.CFrame
                    end
                end
            end)
        end
    end
})

-- Auto Rebirth
FarmingSection:AddToggle({
    Name = "Auto Rebirth",
    Default = false,
    Callback = function(Value)
        getgenv().AutoRebirth = Value
        while getgenv().AutoRebirth and task.wait(0.5) do
            pcall(function()
                ReplicatedStorage.rEvents.rebirthEvent:FireServer("rebirthRequest")
            end)
        end
    end
})

-- Pets Tab
local PetsSection = PetsTab:AddSection({
    Name = "Auto Buy Eggs"
})

local eggTypes = {
    "Basic Egg",
    "Rare Egg",
    "Epic Egg",
    "Legendary Egg",
    "Premium Egg"
}

PetsSection:AddDropdown({
    Name = "Select Egg",
    Default = "Basic Egg",
    Options = eggTypes,
    Callback = function(Value)
        getgenv().SelectedEgg = Value
    end
})

PetsSection:AddToggle({
    Name = "Auto Buy Selected Egg",
    Default = false,
    Callback = function(Value)
        getgenv().AutoBuyEgg = Value
        while getgenv().AutoBuyEgg and task.wait(1) do
            if getgenv().SelectedEgg then
                pcall(function()
                    BuyEgg(getgenv().SelectedEgg)
                end)
            end
        end
    end
})

-- Settings Tab
local SettingsSection = SettingsTab:AddSection({
    Name = "Settings"
})

SettingsSection:AddButton({
    Name = "Destroy GUI",
    Callback = function()
        local platform = workspace:FindFirstChild("FarmPlatform")
        if platform then platform:Destroy() end
        OrionLib:Destroy()
    end
})

SettingsSection:AddButton({
    Name = "Rejoin Game",
    Callback = function()
        TeleportService:Teleport(game.PlaceId, Player)
    end
})

-- Initialize
OrionLib:Init()

-- Toggle Key
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightControl then
        OrionLib:ToggleUI()
    end
end)

-- Anti AFK
local VirtualUser = game:GetService("VirtualUser")
Player.Idled:Connect(function()
    VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)
